"""myapp module"""

module(name = "myapp")

#################################################################################
# Available dependencies from the Bazel registry (https://registry.bazel.build/)
#################################################################################

# rules_cc for building C++ libraries with Bazel
bazel_dep(name = "rules_cc", version = "0.1.0")
# Utility rules for Bazel
bazel_dep(name = "bazel_skylib", version = "1.7.1")
# argparse implementation for modern C++
bazel_dep(name = "argparse", version = "3.0.0")
# C++ library for formatting strings
bazel_dep(name = "fmt", version = "11.1.2")
# rules_python for building python targets
bazel_dep(name = "rules_python", version = "1.1.0")
# pybind11 for binding C++ and Python
bazel_dep(name = "pybind11_bazel", version = "2.13.6")
# Bazel rules for packaging the project
bazel_dep(name = "rules_pkg", version = "1.0.1")
# Google C++ Style Guide
bazel_dep(name = "cpplint", version = "1.6.1", dev_dependency = True)
# C++ test suite by Google
bazel_dep(name = "googletest", version = "1.15.2", dev_dependency = True)
# Doxygen documentation generator
bazel_dep(name = "rules_doxygen", version = "2.1.0", dev_dependency = True)
# MIT | rules for dealing with target dependencies
bazel_dep(name = "depend_on_what_you_use", version = "0.6.0", dev_dependency = True)

#################################################################################
# External dependencies not available in the Bazel registry
#################################################################################
github_archive = use_repo_rule("//tools:git_archive.bzl", "github_archive")

# Logging library
github_archive(
    name = "spdlog",
    build_file = "//third_party:spdlog.BUILD.bazel",  # custom build file
    commit = "v1.15.0",
    repository = "gabime/spdlog",
)

#################################################################################
# Load module extensions
#################################################################################
doxygen_extension = use_extension("@rules_doxygen//:extensions.bzl", "doxygen_extension")
use_repo(doxygen_extension, "doxygen")
